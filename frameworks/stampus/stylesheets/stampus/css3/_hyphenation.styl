@import "shared"

// Mixins to support specific CSS Text Level 3 elements
//
//
//
// Mixin for word-break properties
// http://www.w3.org/css3-text/#word-break
// * legal values for $type : normal, keep-all, break-all
//
// Example:
//   
//    p.wordBreak
//      word-break(break-all) 
//
// Which generates:
//    p.wordBreak {
//      -ms-word-break: break-all;
//      word-break: break-all;
//      word-break: break-word;}
//
word-break(value= normal)
  if value == break-all
    //Most browsers handle the break-all case the same...
    experimental(word-break, value,
      !'moz', !'webkit', !'o', 'ms', !'khtml', 'official'
    )
    experimental(word-break, break-word,
      !'moz', !'webkit', !'o', !'ms', !'khtml', 'official'
    )
  else
    experimental(word-break, value,
      !'moz', !'webkit', !'o', 'ms', !'khtml', 'official'
    )

// Mixin for the hyphens property
//
// W3C specification: http://www.w3.org/TR/css3-text/#hyphens
// * legal values for $type : auto, manual, none
//
// Example:
//    p
//      hyphens(auto)
// Which generates:
//  p {
//    -moz-hyphens: auto;
//    -webkit-hyphens: auto;
//    hyphens: auto;}
//
hyphens(value= auto)
  experimental(hyphens, value,
    'moz', 'webkit', !'o',  !'ms', !'khtml', 'official'
  )



// Mixin for x-browser hyphenation based on @auchenberg's post:
// Removes the need for the <wbr/> HTML tag
// http://blog.kenneth.io/blog/2012/03/04/word-wrapping-hypernation-using-css/
//
//  Example:
//    div
//      hyphenation()
//
//  Which generates:
//    div {
//      -ms-word-break: break-all;
//      word-break: break-all;
//      word-break: break-word;
//      -moz-hyphens: auto;
//      -webkit-hyphens: auto;
//      hyphens: auto;}
//

hyphenation()
  word-break(break-all);
  hyphens()
